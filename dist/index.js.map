{"version":3,"sources":["../src/index.ts"],"sourcesContent":["type Output = {\n  query: string;\n  params: Record<string, any>;\n};\n\nfunction shiftOutput(input: Output, by: number): Output {\n  const { query, params } = input;\n  const newQuery = query.replace(/p_(\\d+)/g, (_, match) => `p_${Number(match) + by}`)\n  const newParams = Object.fromEntries(Object\n    .entries(params)\n    .map(([k, v]) => ([`p_${Number(k.slice(2)) + by}`, v]))\n  )\n  return {\n    query: newQuery,\n    params: newParams,\n  }\n}\n\ntype ParserState = Output & {\n  i: number;\n  strings: TemplateStringsArray;\n  expressions: unknown[];\n};\n\nfunction parseTemplate(state: ParserState): ParserState {\n  const { strings, expressions } = state;\n  let { query, params, i } = state;\n  const totalParams = strings.length;\n  const initialI = i.valueOf();\n  for (i; i < initialI + totalParams; i++) {\n    const index = i - initialI;\n    const string = strings[index];\n    const param = expressions[index];\n\n    if (!!string || typeof param !== 'undefined' || param !== null) {\n      query += string;\n      if (typeof param !== 'undefined' && param !== null) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        if (!isCypherOutput(param)) {\n          const paramName = `$p_${i}`;\n          query += paramName;\n          params[`p_${i}`] = param;\n        } else {\n          const { query: shiftedNestedQuery, params: shiftedNestedParams } =\n            shiftOutput(param, i);\n          query += shiftedNestedQuery\n          params = { ...params, ...shiftedNestedParams };\n        }\n      }\n    }\n  }\n\n  return { query, params, i, strings, expressions };\n}\n\nexport default function cypher(\n  strings: TemplateStringsArray,\n  ...expressions: unknown[]\n): Output {\n  const { query, params } = parseTemplate({\n    query: '',\n    params: {},\n    i: 0,\n    strings,\n    expressions,\n  });\n\n  return {\n    query,\n    params,\n  };\n}\n\nfunction isCypherOutput(input: unknown): input is Output {\n  if (typeof input === 'undefined') return false\n  if (input === null) return false\n  if (Array.isArray(input)) return false;\n  if (typeof input !== 'object') return false;\n  const paramKeys = Object.getOwnPropertyNames(input);\n  return paramKeys[0] === 'query' && paramKeys[1] === 'params';\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,qBAAqB,OAAe,IAAoB;AACtD,QAAM,EAAE,OAAO,WAAW;AAC1B,QAAM,WAAW,MAAM,QAAQ,YAAY,CAAC,GAAG,UAAU,KAAK,OAAO,KAAK,IAAI,IAAI;AAClF,QAAM,YAAY,OAAO,YAAY,OAClC,QAAQ,MAAM,EACd,IAAI,CAAC,CAAC,GAAG,OAAQ,CAAC,KAAK,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,CAAE,CACxD;AACA,SAAO;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AACF;AAQA,uBAAuB,OAAiC;AACtD,QAAM,EAAE,SAAS,gBAAgB;AACjC,MAAI,EAAE,OAAO,QAAQ,MAAM;AAC3B,QAAM,cAAc,QAAQ;AAC5B,QAAM,WAAW,EAAE,QAAQ;AAC3B,OAAK,GAAG,IAAI,WAAW,aAAa,KAAK;AACvC,UAAM,QAAQ,IAAI;AAClB,UAAM,SAAS,QAAQ;AACvB,UAAM,QAAQ,YAAY;AAE1B,QAAI,CAAC,CAAC,UAAU,OAAO,UAAU,eAAe,UAAU,MAAM;AAC9D,eAAS;AACT,UAAI,OAAO,UAAU,eAAe,UAAU,MAAM;AAElD,YAAI,CAAC,eAAe,KAAK,GAAG;AAC1B,gBAAM,YAAY,MAAM;AACxB,mBAAS;AACT,iBAAO,KAAK,OAAO;AAAA,QACrB,OAAO;AACL,gBAAM,EAAE,OAAO,oBAAoB,QAAQ,wBACzC,YAAY,OAAO,CAAC;AACtB,mBAAS;AACT,mBAAS,EAAE,GAAG,QAAQ,GAAG,oBAAoB;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO,EAAE,OAAO,QAAQ,GAAG,SAAS,YAAY;AAClD;AAEe,gBACb,YACG,aACK;AACR,QAAM,EAAE,OAAO,WAAW,cAAc;AAAA,IACtC,OAAO;AAAA,IACP,QAAQ,CAAC;AAAA,IACT,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,wBAAwB,OAAiC;AACvD,MAAI,OAAO,UAAU;AAAa,WAAO;AACzC,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,MAAM,QAAQ,KAAK;AAAG,WAAO;AACjC,MAAI,OAAO,UAAU;AAAU,WAAO;AACtC,QAAM,YAAY,OAAO,oBAAoB,KAAK;AAClD,SAAO,UAAU,OAAO,WAAW,UAAU,OAAO;AACtD;","names":[]}